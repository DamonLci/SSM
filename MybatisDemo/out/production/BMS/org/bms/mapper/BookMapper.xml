<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==================代理方式=================
由mapper标签开始，由/mapper结束，可以把它想成一个空间，是映射文件
属性namespace：空间名，主要在代理中使用。这个namespace是唯一的。
这里把mapper标签和接口联系在一起了，namespace=写接口路径，映射文件要和接口在同一目录下
 -->
<mapper namespace="bookBean">

    <!-- =============映射关系标签=============
  属性type:写po类的包名类名，由于之前定义了po类的别名，这里就写这个别名
  属性id：是这个映射标签的唯一标识
  id标签是查询结果集中的唯一标识
  属性column：查询出来的列名
  属性property：是po类里所指定的列名
  通常会在原列名后面加下划线，这是固定的，这里就是id后面_
   -->
    <resultMap type="BookBean" id="BookBeans">
        <result column="bookId" property="bookId"/>
        <result column="bookName" property="bookName"/>
        <result column="bookImg" property="bookImg"/>
        <result column="bookAuthor" property="bookAuthor"/>
        <result column="bookPublish" property="bookPublish"/>
        <result column="bookPublishTime" property="bookPublishTime"/>
        <result column="bookPrice" property="bookPrice"/>
        <result column="bookCount" property="bookCount"/>
        <result column="bookDescribe" property="bookDescribe"/>
    </resultMap>


    <!--
    #{xxx}：采用预编译的方式设置占位符
    ${xxx}动态拼接sql语句
    &lt;小于
    &gt;大于
    -->
    <!--  图书录入  -->
    <insert id="addBook" parameterType="BookBean">
        INSERT into book (bookName, bookImg, bookAuthor, bookPublish, bookPublishTime, bookPrice, bookCount, bookDescribe)
        values
         (#{bookName}, #{bookImg}, #{bookAuthor}, #{bookPublish}, #{bookPublishTime}, #{bookPrice}, #{bookCount}, #{bookDescribe})
    </insert>
    <select id="queryByName" parameterType="string" resultMap="BookBeans">
        select * from book where bookName=#{bookName}
    </select>

    <update id="updateByName" parameterType="BookBean">
        update book set bookAuthor=#{bookAuthor},bookCount=#{bookCount},bookImg=#{bookImg},bookPrice=#{bookPrice},bookDescribe=#{bookDescribe},bookPublish=#{bookPublish} where bookName=#{bookName}
    </update>

    <delete id="delByName" parameterType="string">
        delete from book where bookName=#{bookName}
    </delete>

    <select id="queryAll" resultMap="BookBeans">
        select * from book
    </select>

</mapper>